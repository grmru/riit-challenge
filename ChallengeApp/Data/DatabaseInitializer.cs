using Microsoft.Extensions.Configuration;
using Npgsql;
using System.Threading.Tasks;

public class DatabaseInitializer
{
    private readonly string _connectionString;

    public DatabaseInitializer(IConfiguration configuration)
    {
        _connectionString = configuration.GetConnectionString("DefaultConnection");
    }

    public async Task InitializeAsync()
    {
        await CreateItemsTableIfNotExist();
        await CreateItemTypesTableIfNotExist();
        await SeedInitialDataAsync();
    }

    private async Task CreateItemsTableIfNotExist()
    {
        using var connection = new NpgsqlConnection(_connectionString);
        await connection.OpenAsync();

        var createTableCommand = @"
            create table if not exists Items (
                ItemNumber varchar(32) primary key,
                ItemName varchar(256) not null,
                ItemTypeId integer not null,
                RoomNumber integer not null check (RoomNumber between 1 and 1000)
            );";

        using var cmd = new NpgsqlCommand(createTableCommand, connection);
        await cmd.ExecuteNonQueryAsync();
    }

    private async Task CreateItemTypesTableIfNotExist()
    {
        using var connection = new NpgsqlConnection(_connectionString);
        await connection.OpenAsync();

        var createTableCommand = @"
            create table if not exists ItemTypes (
                ItemTypeId integer primary key generated by default as identity,
                ItemTypeName varchar(128) not null
            );";

        using var cmd = new NpgsqlCommand(createTableCommand, connection);
        await cmd.ExecuteNonQueryAsync();
    }

    private async Task SeedInitialDataAsync()
    {
        using var connection = new NpgsqlConnection(_connectionString);
        await connection.OpenAsync();

        // Проверяем наличие данных
        var checkDataCommand = "select count(*) from ItemTypes";
        using var checkCmd = new NpgsqlCommand(checkDataCommand, connection);
        var count = (long?)await checkCmd.ExecuteScalarAsync();

        if (count == 0)
        {
            var insertCommand = @"
                insert into ItemTypes(ItemTypeName) values ('Не определено');
                insert into ItemTypes(ItemTypeName) values ('Системные блоки');
                insert into ItemTypes(ItemTypeName) values ('Мониторы');
                insert into ItemTypes(ItemTypeName) values ('Клавиатуры');
                insert into ItemTypes(ItemTypeName) values ('Манипуляторы типа Мышь');
                insert into ItemTypes(ItemTypeName) values ('Принтеры');
                insert into ItemTypes(ItemTypeName) values ('Сканеры'); ";

            using var cmd = new NpgsqlCommand(insertCommand, connection);
            await cmd.ExecuteNonQueryAsync();
        }
    }
}